/*
This source file is part of real2GAME, which is released under the MIT license.
Github repository: https://github.com/OpenNWP/real2GAME
*/

#include <math.h>
enum grid_integers {
RES_ID = 5,
N_BASIC_TRIANGLES = 20,
N_PENTAGONS = 12,
N_HEXAGONS = (int) (10*(pow(2, 2*RES_ID) - 1)),
N_EDGES = 3*N_BASIC_TRIANGLES/2,
N_LAYERS = 26,
N_SOIL_LAYERS = 5,
N_LEVELS = N_LAYERS + 1,
N_SCALARS_H = N_PENTAGONS + N_HEXAGONS,
N_VECTORS_H = (5*N_PENTAGONS/2 + 6/2*N_HEXAGONS),
N_H_VECTORS = N_LAYERS*N_VECTORS_H,
N_V_VECTORS = N_LEVELS*N_SCALARS_H,
N_VECTORS_PER_LAYER = N_VECTORS_H + N_SCALARS_H,
N_TRIANGLES = (int) (N_BASIC_TRIANGLES*(pow(4, RES_ID))),
N_SCALARS = N_SCALARS_H*N_LAYERS,
N_VECTORS = N_H_VECTORS + N_V_VECTORS,
N_DUAL_SCALARS_H = N_TRIANGLES,
N_DUAL_H_VECTORS = N_LEVELS*N_VECTORS_H,
N_DUAL_V_VECTORS = N_LAYERS*N_DUAL_SCALARS_H,
N_DUAL_VECTORS_PER_LAYER = N_VECTORS_H + N_DUAL_SCALARS_H,
N_DUAL_SCALARS = N_LEVELS*N_DUAL_SCALARS_H,
N_DUAL_VECTORS = N_DUAL_H_VECTORS + N_DUAL_V_VECTORS,
TRIANGLES_PER_FACE = N_TRIANGLES/N_BASIC_TRIANGLES,
POINTS_PER_EDGE = (int) (pow(2, RES_ID) - 1),
SCALAR_POINTS_PER_INNER_FACE = (int) (0.5*(pow(2, RES_ID) - 2)*(pow(2, RES_ID) - 1)),
VECTOR_POINTS_PER_INNER_FACE = (int) (1.5*(pow(2, RES_ID) - 1)*pow(2, RES_ID))};
